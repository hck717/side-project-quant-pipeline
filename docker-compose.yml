services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quantnet

  redpanda:
    image: redpandadata/redpanda:v23.3.5
    command:
      - redpanda start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - 1G
      - --reserve-memory
      - 0M
      - --node-id
      - "0"
      - --check=false
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:9092,PLAINTEXT_HOST://localhost:19092
    ports:
      - "9092:9092"
      - "19092:19092"   # host-accessible listener
      - "8081:8081"
    networks:
      - quantnet

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - quantnet

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    entrypoint: /bin/bash
    command:
      - -c
      - |
        pip install --no-cache-dir -r /requirements-airflow.txt && \
        airflow db init && \
        airflow users create \
          --username admin \
          --password admin \
          --firstname Ho \
          --lastname Admin \
          --role Admin \
          --email admin@example.com
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - PYTHONPATH=/opt/airflow:/opt/airflow/scripts
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./requirements-airflow.txt:/requirements-airflow.txt
    depends_on:
      - postgres
    networks:
      - quantnet

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - PYTHONPATH=/opt/airflow:/opt/airflow/scripts
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./requirements-airflow.txt:/requirements-airflow.txt
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redpanda
      - minio
    command:
      - bash
      - -c
      - |
        pip install --no-cache-dir -r /requirements-airflow.txt && \
        airflow webserver & airflow scheduler
    networks:
      - quantnet
  init-topics:
    image: redpandadata/redpanda:v23.3.5
    depends_on:
      - redpanda
    entrypoint: /bin/bash
    command: >
      -c "
      echo 'Waiting for Redpanda to be ready...' &&
      sleep 5 &&
      rpk topic create equities_ticks --brokers=redpanda:9092 --partitions 1 --replicas 1 &&
      rpk topic create crypto_ticks   --brokers=redpanda:9092 --partitions 1 --replicas 1 &&
      rpk topic create bonds_data     --brokers=redpanda:9092 --partitions 1 --replicas 1 &&
      echo 'Topics created successfully'
      "
    networks:
      - quantnet

  mongodb:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - quantnet

  stream-processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    volumes:
      - ./scripts:/app/scripts
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - MONGO_URI=mongodb://mongodb:27017/
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    depends_on:
      - redpanda
      - mongodb
      - minio
    networks:
      - quantnet

  batch-processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    volumes:
      - ./scripts:/app/scripts
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - MONGO_URI=mongodb://mongodb:27017/
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    depends_on:
      - redpanda
      - mongodb
      - minio
    command: python scripts/processing/batch_processor.py --asset-type all
    networks:
      - quantnet

  mongo-tools:
    build:
      context: .
      dockerfile: Dockerfile.processor
    volumes:
      - ./scripts:/app/scripts
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
    depends_on:
      - mongodb
    command: >
      bash -c "
        python scripts/processing/mongo_index_manager.py --verify --analyze &&
        python scripts/processing/query_benchmark.py
      "
    networks:
      - quantnet

volumes:
  postgres_data:
  minio_data:
  mongodb_data:

networks:
  quantnet:
    driver: bridge
