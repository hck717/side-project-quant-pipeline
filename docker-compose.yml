services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quantnet

  redpanda:
    image: redpandadata/redpanda:v23.3.5
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
      - "8081:8081"
    networks:
      - quantnet

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - quantnet

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    entrypoint: /bin/bash
    command:
      - -c
      - |
        pip install --no-cache-dir -r /requirements-airflow.txt && \
        airflow db init && \
        airflow users create \
          --username admin \
          --password admin \
          --firstname Ho \
          --lastname Admin \
          --role Admin \
          --email admin@example.com
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements-airflow.txt:/requirements-airflow.txt
    depends_on:
      - postgres
    networks:
      - quantnet

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements-airflow.txt:/requirements-airflow.txt
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redpanda
      - minio
      - ngrok
    command:
      - bash
      - -c
      - |
        pip install --no-cache-dir -r /requirements-airflow.txt && \
        airflow webserver & airflow scheduler
    networks:
      - quantnet

  flink-jobmanager:
    image: flink:1.17.1-scala_2.12
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    ports:
      - "8082:8081"
    volumes:
      - ./requirements-flink.txt:/requirements-flink.txt
    entrypoint: /bin/bash
    command:
      - -c
      - |
        pip install --no-cache-dir -r /requirements-flink.txt || true
        /docker-entrypoint.sh jobmanager
    networks:
      - quantnet

  flink-taskmanager:
    image: flink:1.17.1-scala_2.12
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    depends_on:
      - flink-jobmanager
    volumes:
      - ./requirements-flink.txt:/requirements-flink.txt
    entrypoint: /bin/bash
    command:
      - -c
      - |
        pip install --no-cache-dir -r /requirements-flink.txt || true
        /docker-entrypoint.sh taskmanager
    networks:
      - quantnet

  ngrok:
    image: ngrok/ngrok:latest
    platform: linux/arm64
    command: tcp redpanda:9092
    environment:
      NGROK_AUTHTOKEN: 32sBFDUu6SLfsYAJeXorfYSxG3P_5ZJUACTmBERtzrPWaufCx
    ports:
      - "4040:4040"
    depends_on:
      - redpanda
    networks:
      - quantnet

volumes:
  postgres_data:
  minio_data:

networks:
  quantnet:
    driver: bridge
