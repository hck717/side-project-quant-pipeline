version: "3.9"

services:
  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__PARALLELISM=2
      - AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG=2
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=AS-MMOem2RbAmi_Z3qH42rcE8w4Bh1C3iBWQN4HF7MY=
      - PYTHONPATH=/workspace
      - AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT=300
      - AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT=300
      - AIRFLOW__WEBSERVER__WORKERS=2
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/workspace/scripts
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db init;
        airflow users create --username admin --password admin --firstname Ho --lastname User --role Admin --email admin@example.com || true;
        airflow webserver --host 0.0.0.0 & airflow scheduler
      "
    depends_on:
      - postgres
    networks:
      - quantnet

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    networks:
      - quantnet

  redpanda:
    image: redpandadata/redpanda:v23.3.5
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
      - "8081:8081"
    networks:
      - quantnet

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - quantnet

  flink-jobmanager:
    # If you want PyFlink inside Flink, uncomment the build section below
    # build:
    #   context: .
    #   dockerfile: Dockerfile.flink
    image: flink:1.17.1-scala_2.12
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    ports:
      - "8082:8081"
    networks:
      - quantnet

  flink-taskmanager:
    image: flink:1.17.1-scala_2.12
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    depends_on:
      - flink-jobmanager
    networks:
      - quantnet

networks:
  quantnet:
    driver: bridge
